apply plugin: 'java'

task wrapper(type: Wrapper) { gradleVersion = '1.0' }

repositories { 
	mavenCentral ()
	maven {url 'http://www.smartclient.com/maven2'}
}

configurations {
	gwtCompile
	gwtCompilerTools
}

dependencies {
	compile 'com.smartgwt:smartgwt:3.0'
	compile 'com.smartgwt:smartgwt-skins:3.0'
	compile 'com.google.gwt:gwt-user:2.4.0'
	compile 'com.google.gwt:gwt-dev:2.4.0'

	compile fileTree(dir: 'lib', includes: ['*.jar']) 
	
	gwtCompilerTools 'com.google.gwt:gwt-dev:2.4.0'
}

sourceSets.main.java.srcDirs = ["src"] 
sourceSets.main.resources.srcDirs = ["src"] 
sourceSets.main.output.classesDir = file("$projectDir/war/WEB-INF/classes")
sourceSets.main.output.resourcesDir = file("$projectDir/war/WEB-INF/classes")


sourceSets {
	main {
		compileClasspath += configurations.gwtCompile
	}
}

task war(type: War) {
    from 'war'
}

war.dependsOn classes

def entryPoint = 'edu.mayo.cts2Viewer.Cts2Viewer'

def gwtCompilerPath = []

project.sourceSets.each {it.allSource.srcDirs.each {
		gwtCompilerPath << it
	}
}
project.configurations.compile.each {
	gwtCompilerPath << it
}
project.configurations.gwtCompilerTools.each {
	gwtCompilerPath << it
}

task gwtCompile (type: JavaExec) {
	
	gwtCompilerPath.each {
		inputs.file it
	}
	outputs.dir 'build/war'

	logger.lifecycle ("Using gwtCompilerPath: $gwtCompilerPath")
	main='com.google.gwt.dev.Compiler'
	jvmArgs "-Xmx256m"
	args '-war', 'build/war', '-deploy', 'deploy', '-logLevel', 'INFO', '-localWorkers', '4', '-strict', entryPoint
		
	classpath {
		gwtCompilerPath
	}
}

task showExecWorkingDir {
    new ByteArrayOutputStream().withStream { os ->
        def result = exec {
            executable = 'pwd'
            standardOutput = os
        }
        def outputAsString = os.toString()
        println "exec working dir is: ${outputAsString}"
    }
}

